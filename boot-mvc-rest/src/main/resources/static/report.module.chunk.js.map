{"version":3,"sources":["C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report-container/report-container.component.css","C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report-container/report-container.component.html","C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report-container/report-container.component.ts","C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report-grid/report-grid.component.css","C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report-grid/report-grid.component.html","C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report-grid/report-grid.component.ts","C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report-panel/report-panel.component.css","C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report-panel/report-panel.component.html","C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report-panel/report-panel.component.ts","C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report-routing.module.ts","C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report.module.ts","C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/services/report-criteria.model.ts","C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/services/report.bo.ts","C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/services/report.service.ts","C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/view-scripts.ts"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,0H;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,2CAAQ,GAAR;IACA,CAAC;IALU,wBAAwB;QALpC,wEAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;;OACW,wBAAwB,CAOpC;IAAD,+BAAC;CAAA;AAPoC;;;;;;;;ACPrC;AACA;;;AAGA;AACA,qCAAsC,uBAAuB,0BAA0B,OAAO,qDAAqD,qBAAqB,OAAO;;AAE/K;;;AAGA;AACA,2C;;;;;;;ACXA,2XAA2X,QAAQ,0MAA0M,UAAU,mNAAmN,cAAc,qNAAqN,eAAe,wNAAwN,kBAAkB,uNAAuN,mBAAmB,yNAAyN,iBAAiB,8MAA8M,YAAY,uNAAuN,gBAAgB,2NAA2N,qBAAqB,mJAAmJ,kE;;;;;;;;;;;;;;;;;;;;;;ACAx9E;AAEQ;AAG9E,sGAAsG;AAC3C;AACZ;AAK/C,4DAA4D;AAQ5D;IAUE,6BAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QALhD,mBAAc,GAAG,EAAE,CAAC;IAMpB,CAAC;IACD,gBAAgB;IAChB,8BAA8B;IAC9B,iCAAiC;IACjC,8CAA8C;IAC9C,8CAA8C;IAC9C,IAAI;IACJ,sCAAQ,GAAR;QAAA,iBAmBC;QAlBC,IAAI,CAAC,aAAa,GAAG,IAAI,6EAAkB,EAAU,CAAC;QACrD,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAArB,CAAqB,EAAE,aAAG,IAAI,YAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAnB,CAAmB,CAAC,CAAC;QACtG;;;;;uCAK+B;QAE/B,IAAM,IAAI,GAAG,MAAM,CAAC,mBAAmB,CAAC,IAAI,mEAAM,EAAE,CAAC,CAAC;QACtD,IAAM,aAAa,GAAG,EAAE,CAAC;QACzB,GAAG,CAAC,CAAY,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;YAAf,IAAM,CAAC;YACV,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACvB;QACD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3B,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QAEpC,OAAO,CAAC,GAAG,CAAE,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,EAAC,EAAE,EAAE,OAAO,EAAC,CAAC,CAAC,CAAC;IACzE,CAAC;IAED;;;OAGG;IACH,6CAAe,GAAf;QACE,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACpC,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAChD,CAAC;IAED,wCAAU,GAAV,UAAW,OAAO;QAChB,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,OAAO,CAAC,CAAC;QACvC,IAAM,IAAI,GAAG,IAAI,KAAK,EAAU,CAAC;QACjC,8BAA8B;QAC9B,gEAAgE;QAChE,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,OAAO,CAAC;IACpC,CAAC;IACD,uCAAS,GAAT,UAAU,GAAG;QACX,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;IAC5B,CAAC;IAlDmB;QAAnB,0EAAS,CAAC,kEAAO,CAAC;kCAAO,kEAAO;qDAAC;IACT;QAAxB,0EAAS,CAAC,uEAAY,CAAC;kCAAY,uEAAY;0DAAC;IARtC,mBAAmB;QAL/B,wEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAWmC,+EAAa;OAVrC,mBAAmB,CA2D/B;IAAD,0BAAC;CAAA;AA3D+B;AA4DhC;;;;;;;;;;;;EAYE;;;;;;;;AC5FF;AACA;;;AAGA;AACA,qCAAsC,qBAAqB,KAAK,gBAAgB,0BAA0B,KAAK;;AAE/G;;;AAGA;AACA,2C;;;;;;;ACXA,o3BAAo3B,uBAAuB,2BAA2B,0BAA0B,2C;;;;;;;;;;;;;;;;;;;;;;ACA94B;AACE;AACkC;AAC3B;AAS3D;IAkBE,8BAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAThD,cAAc;QACN,mBAAc,GAAG,EAAE,CAAC;QACpB,oBAAe,GAAG,EAAE,CAAC;QAK7B,gBAAW,GAAG,kBAAkB,CAAC;IAGjC,CAAC;IAED,uCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAE7B,IAAM,QAAQ,GAAa,MAAM,CAAC,mBAAmB,CAAC,0FAAiB,CAAC,CAAC;QACzE,IAAM,YAAY,GAAG,EAAE,CAAC;QACxB,QAAQ,CAAC,OAAO,CAAC,WAAC,IAAI,mBAAY,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,WAAW,EAAE,8DAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAzD,CAAyD,CAAC,CAAC;QACjF,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAElC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,cAAI;YACzC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAgB,GAAhB;QACE,OAAO,CAAC,GAAG,CAAC,2BAAyB,IAAI,CAAC,cAAc,cAAS,IAAI,CAAC,eAAiB,CAAC,CAAC;QACzF,IAAM,OAAO,GAAmB,EAAE,CAAC;QACnC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;QACpD,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;IAC/C,CAAC;IAED,+CAAgB,GAAhB,UAAiB,QAAQ;QACvB,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,QAAQ,CAAC,CAAC;QAC7C,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;QAC/B,EAAE,CAAC,CAAC,QAAQ,IAAI,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,0CAAW,GAAX,UAAY,QAAQ;QAClB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,EAAE,CAAC,CAAC,QAAQ,IAAI,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;QAClC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/B,CAAC;IACH,CAAC;IA3DU,oBAAoB;QALhC,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAmBmC,+EAAa;OAlBrC,oBAAoB,CA4DhC;IAAD,2BAAC;CAAA;AA5DgC;;;;;;;;;;;;;;;;;;;;ACZQ;AACc;AACkC;AACf;AAG1E,IAAM,MAAM,GAAW;IACP,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAG;IACtD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAG,+FAAmB,EAAC;IAClD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAG,8GAAwB,EAAC;CACzD,CAAC;AAMd;IAAA;IAAmC,CAAC;IAAvB,mBAAmB;QAJ/B,uEAAQ,CAAC;YACR,OAAO,EAAE,CAAC,qEAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,qEAAY,CAAC;SACxB,CAAC;OACW,mBAAmB,CAAI;IAAD,0BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBS;AACM;AACJ;AACa;AACxD,+EAA+E;AAMpD;AAE+C;AACe;AACzF,iGAAiG;AACpB;AACf;AAC9D,kDAAkD;AAEP;AACe;AAuB1D;IAAA;IAA4B,CAAC;IAAhB,YAAY;QApBxB,uEAAQ,CAAC;YACR,OAAO,EAAE;gBACP,qEAAY;gBACZ,iEAAU;gBACV,8EAAgB;gBAChB,mFAAmB;gBACnB,6EAAkB;gBAClB,0EAAe;gBACf,wEAAa;gBACb,yEAAc;gBACd,iEAAY;aACb;YACC,YAAY,EAAE,CAAC,8GAAwB,EAAE,+FAAmB,EAAE,kGAAoB,CAAC;YACnF,OAAO,EAAE;gBACP,8GAAwB,EAAE,+FAAmB,EAAE,kGAAoB;aACtE;YACD,SAAS,EAAE;gBACT,gFAAa;aACd;SACF,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ;;;;;;;;;AC5BzB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA2GE;AAEK,IAAM,iBAAiB,GAAmB;IAC7C,EAAE,EAAE,EAAE;IACJ,MAAM,EAAE,EAAE;IACV,IAAI,EAAE,EAAE;IACR,QAAQ,EAAE,EAAE;IACZ,SAAS,EAAE,EAAE;IACb,YAAY,EAAE,EAAE;IAChB,aAAa,EAAE,EAAE;IACjB,WAAW,EAAE,KAAK;IAClB,MAAM,EAAE,EAAE;IACV,UAAU,EAAE,EAAE;IACd,eAAe,EAAE,EAAE;CACxB,CAAC;;;;;;;;;;;;;;;;;;;;;ACxIoD;AAEtD;IAqCI;QACI,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAChC,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QAC7B,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;IACtC,CAAC;IAED,sBAAW,sBAAE;aAAb;YACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;QACpB,CAAC;aAED,UAAc,KAAa;YACvB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAJA;IAMD,sBAAW,0BAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;aAED,UAAkB,KAAa;YAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAJA;IAMD,sBAAW,0BAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;aAED,UAAkB,KAAa;YAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAJA;IAMD,sBAAW,wBAAI;aAAf;YACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;aAED,UAAgB,KAAa;YACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAJA;IAMD,sBAAW,gCAAY;aAAvB;YACI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;aAED,UAAwB,KAAa;YACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC/B,CAAC;;;OAJA;IAOD,sBAAW,4BAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;aAED,UAAoB,KAAa;YAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,CAAC;;;OAJA;IAMD,sBAAW,6BAAS;aAApB;YACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;aAED,UAAqB,KAAa;YAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAMD,sBAAW,gCAAY;aAAvB;YACI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;aAED,UAAwB,KAAa;YACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC/B,CAAC;;;OAJA;IAMD,sBAAW,iCAAa;aAAxB;YACI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;QAC/B,CAAC;aAED,UAAyB,KAAa;YAClC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAChC,CAAC;;;OAJA;IAMD,sBAAW,mCAAe;aAA1B;YACI,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;QACjC,CAAC;aAED,UAA2B,KAAa;YACpC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAClC,CAAC;;;OAJA;IAMD,sBAAW,+BAAW;aAAtB;YACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;aAED,UAAuB,KAAc;YACjC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC9B,CAAC;;;OAJA;IAMD,sBAAW,8BAAU;aAArB;YACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;aAED,UAAsB,KAAa;YAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC7B,CAAC;;;OAJA;IA3ID;QADC,4EAAY,CAAC,IAAI,CAAC;;uCACC;IAGpB;QADC,4EAAY,CAAC,QAAQ,CAAC;;2CACC;IAGxB;QADC,4EAAY,CAAC,cAAc,CAAC;;iDACC;IAG9B;QADC,4EAAY,CAAC,eAAe,CAAC;;kDACC;IAG/B;QADC,4EAAY,CAAC,iBAAiB,CAAC;;oDACC;IAGjC;QADC,4EAAY,CAAC,aAAa,CAAC;;gDACE;IAG9B;QADC,4EAAY,CAAC,YAAY,CAAC;;+CACC;IAG5B;QADC,4EAAY,CAAC,QAAQ,CAAC;;2CACC;IAGxB;QADC,4EAAY,CAAC,MAAM,CAAC;;yCACC;IAGtB;QADC,4EAAY,CAAC,cAAc,CAAC;;iDACC;IAG9B;QADC,4EAAY,CAAC,UAAU,CAAC;;6CACC;IAG1B;QADC,4EAAY,CAAC,WAAW,CAAC;;8CACC;IAgH/B,aAAC;CAAA;AAnJkB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFwB;AACoC;AAChD;AAEsB;AAEhB;AAG0B;AACR;AAKvD;IAOE,uBAAoB,OAAa,EAAU,UAAsB;QAA7C,YAAO,GAAP,OAAO,CAAM;QAAU,eAAU,GAAV,UAAU,CAAY;QAHzD,kBAAa,GAAG,IAAI,6EAAe,CAAW,SAAS,CAAC,CAAC;QAI/D,OAAO,CAAC,GAAG,CAAC,0BAA0B;cAClC,IAAI,CAAC,OAAO,CAAC,CAAC;IACpB,CAAC;IAED,kCAAU,GAAV;QAAA,iBAYC;QAXC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,cAAI;YAC9C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBAAC,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;YAAC,CAAC;YACvD,IAAM,UAAU,GAAG,EAAE,CAAC;YACtB,GAAG,CAAC,CAAY,UAAW,EAAX,SAAI,CAAC,IAAI,EAAE,EAAX,cAAW,EAAX,IAAW;gBAAtB,IAAM,CAAC;gBACV,IAAM,IAAI,GAAW,2EAAW,CAAC,0DAAM,EAAE,CAAC,CAAC,CAAC;gBAC5C,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACvB;YACD,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACpC,yDAAyD;YACzD,MAAM,CAAC,UAAU,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAe,GAAf;QAAA,iBAYC;QAXC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,cAAI;YACpD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBAAC,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;YAAC,CAAC;YACvD,IAAM,UAAU,GAAG,EAAE,CAAC;YACtB,GAAG,CAAC,CAAY,UAAW,EAAX,SAAI,CAAC,IAAI,EAAE,EAAX,cAAW,EAAX,IAAW;gBAAtB,IAAM,CAAC;gBACV,IAAM,IAAI,GAAW,2EAAW,CAAC,0DAAM,EAAE,CAAC,CAAC,CAAC;gBAC5C,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACvB;YACD,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACpC,yDAAyD;YACzD,MAAM,CAAC,UAAU,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+BAAO,GAAP;QACE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;IAC3C,CAAC;IAED,wCAAgB,GAAhB,UAAiB,OAAuB;QAAxC,iBAcC;QAbC,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,CAAC;QAClC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;YAClD,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC;QAC5C,CAAC;QACD,IAAM,YAAY,GAAG,IAAI,yEAAW,EAAE,CAAC;QACvC,YAAY,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAErD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,oBAAoB,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YAC1F,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;YAC1B,KAAI,CAAC,aAAa,CAAC,IAAI,CAAW,GAAG,CAAC,CAAC;YACvC,KAAI,CAAC,YAAY,GAAa,GAAG,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IA1DU,aAAa;QADzB,yEAAU,EAAE;yCAQkB,2DAAI,EAAsB,wEAAU;OAPtD,aAAa,CA4DzB;IAAD,oBAAC;CAAA;AA5DyB;;;;;;;;;;ACfnB,IAAM,OAAO,GAAG;IACnB,EAAE,EAAE,IAAI;IACR,MAAM,EAAE,QAAQ;IAChB,IAAI,EAAE,MAAM;IACZ,QAAQ,EAAE,UAAU;IACpB,SAAS,EAAE,YAAY;IACvB,YAAY,EAAE,cAAc;IAC5B,aAAa,EAAE,eAAe;IAC9B,WAAW,EAAE,aAAa;IAC1B,MAAM,EAAE,QAAQ;IAChB,UAAU,EAAE,mBAAmB;IAC/B,eAAe,EAAE,cAAc;CAClC,CAAC","file":"report.module.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report-container/report-container.component.css\n// module id = ../../../../../src/app/pages/report/report-container/report-container.component.css\n// module chunks = report.module","module.exports = \"<div class=\\\"container\\\">\\n    <report-panel></report-panel>\\n    <report-grid></report-grid>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report-container/report-container.component.html\n// module id = ../../../../../src/app/pages/report/report-container/report-container.component.html\n// module chunks = report.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-report-container',\n  templateUrl: './report-container.component.html',\n  styleUrls: ['./report-container.component.css']\n})\nexport class ReportContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report-container/report-container.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".mat-table {\\r\\n    overflow: auto;\\r\\n    max-height: 500px;\\r\\n  }\\r\\n  \\r\\n  .mat-header-cell.mat-sort-header-sorted {\\r\\n    color: black;\\r\\n  }\\r\\n  \", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report-grid/report-grid.component.css\n// module id = ../../../../../src/app/pages/report/report-grid/report-grid.component.css\n// module chunks = report.module","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-paginator #paginator [pageSize]=\\\"20\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n  </mat-paginator>\\n\\n  <mat-table #table [dataSource]=\\\"reportDataSrc\\\" matSort>\\n    <ng-container matColumnDef=\\\"_id\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let rec\\\">{{rec.id}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"_flow\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>FLOW</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let rec\\\">{{rec.flow}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"_sourceId\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>SOURCE_ID</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let rec\\\">{{rec.sourceId}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"_sourceUId\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>SOURCE_UID</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let rec\\\">{{rec.sourceUId}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"_sourceSystem\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>SOURCE_SYS</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let rec\\\">{{rec.sourceSystem}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"_sourceVersion\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>SOURCE_V</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let rec\\\">{{rec.sourceVersion}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"_rdsEligible\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>RDS_ELIGIBLE</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let rec\\\">{{rec.rdsEligible}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"_stream\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>STREAM</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let rec\\\">{{rec.stream}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"_receivedTs\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>RECEIVED_TS</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let rec\\\">{{rec.receivedTs}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"_regReportingRef\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>REPORT_REF</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let rec\\\">{{rec.regReportingRef}}</mat-cell>\\n    </ng-container>\\n\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayColumns\\\"></mat-row>\\n\\n  </mat-table>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report-grid/report-grid.component.html\n// module id = ../../../../../src/app/pages/report/report-grid/report-grid.component.html\n// module chunks = report.module","import { Component, OnInit, ViewChild, DoCheck } from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { AfterViewInit } from '@angular/core';\n\n// import { ReportService, Report } from '@app/pages/report'; //../../services/report/report.service';\nimport { ReportService } from '../services/report.service';\nimport { Report } from '../services/report.bo';\n\nimport { AgGridModule } from 'ag-grid-angular/main';\nimport { GridOptions } from 'ag-grid/main';\nimport { RedComponent } from './red/red.component';\n// import { Report } from '../../services/report/report.bo';\n\n\n@Component({\n  selector: 'report-grid',\n  templateUrl: './report-grid.component.html',\n  styleUrls: ['./report-grid.component.css']\n})\nexport class ReportGridComponent implements OnInit, AfterViewInit {\n\n  // private recordsList: Report[];\n  private reportDataSrc: MatTableDataSource<Report>;\n\n  displayColumns = [];\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private reportService: ReportService) {\n  }\n  // ngDoCheck() {\n  //   console.log(\"ngDoCheck\");\n  //   this.reportService.reports()\n  //   .subscribe( reps => this.handleResp(reps)\n  //              , err => this.handleErr(err));\n  // }\n  ngOnInit() {\n    this.reportDataSrc = new MatTableDataSource<Report>();\n     this.reportService.getReports().subscribe(data => this.handleResp(data), err => this.handleErr(err));\n    /*\n     this.reportService.fetchReportsAll();\n    this.reportService.reports()\n                      .subscribe( reps => this.handleResp(reps)\n                                 , err => this.handleErr(err));\n                                 */\n\n    const prop = Object.getOwnPropertyNames(new Report());\n    const propAsColumns = [];\n    for (const p of prop) {\n      propAsColumns.push(p);\n    }\n    console.log(propAsColumns);\n    this.displayColumns = propAsColumns;\n\n    console.log( ' ' + this.reportService.reportByCriteria({id: 'ID_10'}));\n  }\n\n  /**\n   * Set the sort after the view init since this component will\n   * be able to query its view for the initialized sort.\n   */\n  ngAfterViewInit() {\n    this.reportDataSrc.sort = this.sort;\n    this.reportDataSrc.paginator = this.paginator;\n  }\n\n  handleResp(reports) {\n    console.log('handleresp : ' + reports);\n    const rows = new Array<Report>();\n    // this.recordsList = reports;\n    // this.reportDataSrc = new MatTableDataSource<Report>(reports);\n    this.reportDataSrc.data = reports;\n  }\n  handleErr(err) {\n    console.log('err ' + err);\n  }\n\n}\n/*\nexport class ReportDataSource extends DataSource<Report> {\n\n  constructor(private reportService: ReportService) {\n\n  }\n\n  connect() {\n    new ReportGridComponent(this.reportService).\n  }\n\n}\n*/\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report-grid/report-grid.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".panel-form{\\r\\n    margin: 30px;\\r\\n}\\r\\n.button-mat{\\r\\n    padding-top: 10px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report-panel/report-panel.component.css\n// module id = ../../../../../src/app/pages/report/report-panel/report-panel.component.css\n// module chunks = report.module","module.exports = \"<div class=\\\"panel-form\\\">\\n    <form class=\\\"\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3 select-mat\\\">\\n                <app-select-mat [recordColumns]=\\\"recordColumns\\\" (selectedColumn)=\\\"onSelectedColumn($event)\\\"></app-select-mat>\\n            </div>\\n\\n            <div class=\\\"col-md-3 input-mat\\\">\\n                <app-input-mat [placeHolderIn]=\\\"placeHolder\\\" [disabledIn]=\\\"isEditableInput\\\" (InputEvt)=\\\"handleInput($event)\\\"></app-input-mat>\\n            </div>\\n            <div class=\\\"col-md-2 button-mat\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" mat-raised-button [disabled]=\\\"!isReadyToSubmit\\\" (click)=\\\"fetchClickAction()\\\">Fetch</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n<div>\\n        <ul>\\n            <li *ngFor=\\\"let rec of resultReports\\\">\\n                id : {{rec ? rec.id : '-na-'}}\\n                flow : {{rec ? rec.flow : '-na-' }}\\n            </li>\\n        </ul>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report-panel/report-panel.component.html\n// module id = ../../../../../src/app/pages/report/report-panel/report-panel.component.html\n// module chunks = report.module","import { Component, OnInit } from '@angular/core';\nimport { SCRIPTS as script } from '../view-scripts';\nimport { ReportCriteriaObj, ReportCriteria } from '../services/report-criteria.model';\nimport { ReportService } from '../services/report.service';\nimport { Observable } from 'rxjs/Observable';\nimport { Report } from '../services/report.bo';\n\n@Component({\n  selector: 'report-panel',\n  templateUrl: './report-panel.component.html',\n  styleUrls: ['./report-panel.component.css']\n})\nexport class ReportPanelComponent implements OnInit {\n\n  recordColumns: any[];\n\n  isEditableInput: boolean;\n  selectedColKey: string;\n\n  isReadyToSubmit: boolean;\n\n  // form values\n  private selectedColVal = '';\n  private enteredInputVal = '';\n\n  private recordObserve: Observable<Report[]>;\n  resultReports: Report[];\n\n  placeHolder = 'Enter a criteria';\n\n  constructor(private reportService: ReportService) {\n  }\n\n  ngOnInit() {\n    this.isEditableInput = false;\n    this.isReadyToSubmit = false;\n\n    const repCrits: string[] = Object.getOwnPropertyNames(ReportCriteriaObj);\n    const recColumnTmp = [];\n    repCrits.forEach(r => recColumnTmp.push({ 'value': r, 'viewValue': script[r] }));\n    this.recordColumns = recColumnTmp;\n\n    this.selectedColVal = '';\n    this.reportService.reports().subscribe(reps => {\n      this.resultReports = reps;\n    });\n  }\n\n  fetchClickAction() {\n    console.log(`ready to submit key : ${this.selectedColKey} val: ${this.enteredInputVal}`);\n    const repCrit: ReportCriteria = {};\n    repCrit[this.selectedColKey] = this.enteredInputVal;\n    this.reportService.reportByCriteria(repCrit);\n  }\n\n  onSelectedColumn(selected) {\n    console.log('Outter Commponent ' + selected);\n    this.selectedColKey = selected;\n    if (selected && '' !== selected) {\n      this.isEditableInput = true;\n    }\n  }\n\n  handleInput(inputBox) {\n    console.log(inputBox);\n    if (inputBox && '' !== inputBox) {\n      this.isReadyToSubmit = true;\n      this.enteredInputVal = inputBox;\n    } else {\n      this.isReadyToSubmit = false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report-panel/report-panel.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReportContainerComponent } from './report-container/report-container.component';\nimport { ReportGridComponent } from './report-grid/report-grid.component';\nimport { ReportPanelComponent } from './report-panel/report-panel.component';\n\nconst routes: Routes = [\n                { path: '', redirectTo: 'report', pathMatch: 'full'  },\n                { path: 'report', component : ReportGridComponent},\n                { path: 'panel', component : ReportContainerComponent}\n            ];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReportRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\n//import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {\n  MatPaginatorModule,\n  MatSelectModule,\n  MatSortModule,\n  MatTableModule,\n} from '@angular/material';\n\nimport { ReportGridComponent } from './report-grid/report-grid.component';\nimport { ReportContainerComponent } from './report-container/report-container.component';\n// import { ReportContainerComponent, ReportGridComponent, ReportPanelComponent } from './index';\nimport { ReportPanelComponent } from './report-panel/report-panel.component';\nimport { ReportRoutingModule } from './report-routing.module';\n// import { ReportPanelComponent } from './index';\n\nimport { SharedModule } from '@app/shared';\nimport { ReportService } from './services/report.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpModule,\n    HttpClientModule,\n    ReportRoutingModule,\n    MatPaginatorModule,\n    MatSelectModule,\n    MatSortModule,\n    MatTableModule,\n    SharedModule\n  ]\n  , declarations: [ReportContainerComponent, ReportGridComponent, ReportPanelComponent]\n  , exports: [\n      ReportContainerComponent, ReportGridComponent, ReportPanelComponent\n  ],\n  providers: [\n    ReportService\n  ]\n})\nexport class ReportModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/report.module.ts","\r\nexport interface ReportCriteria {\r\n    id?: string;\r\n    status?: string;\r\n    flow?: string;\r\n    sourceId?: string;\r\n    sourceUId?: string;\r\n    sourceSystem?: string;\r\n    sourceVersion?: string;\r\n    rdsEligible?: boolean;\r\n    stream?: string;\r\n    receivedTs?: string;\r\n    regReportingRef?: string;\r\n}\r\n\r\n/*\r\nexport class ReportCriteria {\r\n    private _id: string;\r\n    private _status: string;\r\n    private _flow: string;\r\n    private _sourceId: string;\r\n    private _sourceUId: string;\r\n    private _sourceSystem: string;\r\n    private _sourceVersion: string;\r\n    private _rdsEligible: boolean;\r\n    private _stream: string;\r\n    private _receivedTs: string;\r\n    private _regReportingRef: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n\r\n    public get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    public set id(value: string) {\r\n        this._id = value;\r\n    }\r\n\r\n    public get status(): string {\r\n        return this._status;\r\n    }\r\n\r\n    public set status(value: string) {\r\n        this._status = value;\r\n    }\r\n\r\n    public get flow(): string {\r\n        return this._flow;\r\n    }\r\n\r\n    public set flow(value: string) {\r\n        this._flow = value;\r\n    }\r\n\r\n    public get sourceId(): string {\r\n        return this._sourceId;\r\n    }\r\n\r\n    public set sourceId(value: string) {\r\n        this._sourceId = value;\r\n    }\r\n\r\n    public get sourceUId(): string {\r\n        return this._sourceUId;\r\n    }\r\n\r\n    public set sourceUId(value: string) {\r\n        this._sourceUId = value;\r\n    }\r\n\r\n    public get sourceSystem(): string {\r\n        return this._sourceSystem;\r\n    }\r\n\r\n    public set sourceSystem(value: string) {\r\n        this._sourceSystem = value;\r\n    }\r\n\r\n    public get sourceVersion(): string {\r\n        return this._sourceVersion;\r\n    }\r\n\r\n    public set sourceVersion(value: string) {\r\n        this._sourceVersion = value;\r\n    }\r\n\r\n    public get rdsEligible(): boolean {\r\n        return this._rdsEligible;\r\n    }\r\n\r\n    public set rdsEligible(value: boolean) {\r\n        this._rdsEligible = value;\r\n    }\r\n\r\n    public get stream(): string {\r\n        return this._stream;\r\n    }\r\n\r\n    public set stream(value: string) {\r\n        this._stream = value;\r\n    }\r\n\r\n    public get receivedTs(): string {\r\n        return this._receivedTs;\r\n    }\r\n\r\n    public set receivedTs(value: string) {\r\n        this._receivedTs = value;\r\n    }\r\n\r\n    public get regReportingRef(): string {\r\n        return this._regReportingRef;\r\n    }\r\n\r\n    public set regReportingRef(value: string) {\r\n        this._regReportingRef = value;\r\n    }\r\n}\r\n*/\r\n\r\nexport const ReportCriteriaObj: ReportCriteria = {\r\n    id: ''\r\n    , status: ''\r\n    , flow: ''\r\n    , sourceId: ''\r\n    , sourceUId: ''\r\n    , sourceSystem: ''\r\n    , sourceVersion: ''\r\n    , rdsEligible: false\r\n    , stream: ''\r\n    , receivedTs: ''\r\n    , regReportingRef: ''\r\n};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/services/report-criteria.model.ts","import { JsonProperty } from 'json-typescript-mapper';\r\n\r\nexport class Report {\r\n    @JsonProperty('id')\r\n    private _id: string;\r\n\r\n    @JsonProperty('status')\r\n    private _status: string;\r\n\r\n    @JsonProperty('sourceStatus')\r\n    private _sourceStatus: string;\r\n\r\n    @JsonProperty('sourceVersion')\r\n    private _sourceVersion: string;\r\n\r\n    @JsonProperty('regReportingRef')\r\n    private _regReportingRef: string;\r\n\r\n    @JsonProperty('rdsEligible')\r\n    private _rdsEligible: boolean;\r\n\r\n    @JsonProperty('receivedTs')\r\n    private _receivedTs: number;\r\n\r\n    @JsonProperty('stream')\r\n    private _stream: string;\r\n\r\n    @JsonProperty('flow')\r\n    private _flow: string;\r\n\r\n    @JsonProperty('sourceSystem')\r\n    private _sourceSystem: string;\r\n\r\n    @JsonProperty('sourceId')\r\n    private _sourceId: string;\r\n\r\n    @JsonProperty('sourceUId')\r\n    private _sourceUId: string;\r\n\r\n    constructor() {\r\n        this._id = undefined;\r\n        this._flow = undefined;\r\n        this._sourceId = undefined;\r\n        this._sourceUId = undefined;\r\n        this._sourceSystem = undefined;\r\n        this._sourceVersion = undefined;\r\n        this._rdsEligible = undefined;\r\n        this._stream = undefined;\r\n        this._receivedTs = undefined;\r\n        this._regReportingRef = undefined;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    public set id(value: string) {\r\n        this._id = value;\r\n    }\r\n\r\n    public get status(): string {\r\n        return this._status;\r\n    }\r\n\r\n    public set status(value: string) {\r\n        this._status = value;\r\n    }\r\n\r\n    public get stream(): string {\r\n        return this._stream;\r\n    }\r\n\r\n    public set stream(value: string) {\r\n        this._stream = value;\r\n    }\r\n\r\n    public get flow(): string {\r\n        return this._flow;\r\n    }\r\n\r\n    public set flow(value: string) {\r\n        this._flow = value;\r\n    }\r\n\r\n    public get sourceSystem(): string {\r\n        return this._sourceSystem;\r\n    }\r\n\r\n    public set sourceSystem(value: string) {\r\n        this._sourceSystem = value;\r\n    }\r\n\r\n\r\n    public get sourceId(): string {\r\n        return this._sourceId;\r\n    }\r\n\r\n    public set sourceId(value: string) {\r\n        this._sourceId = value;\r\n    }\r\n\r\n    public get sourceUId(): string {\r\n        return this._sourceUId;\r\n    }\r\n\r\n    public set sourceUId(value: string) {\r\n        this._sourceUId = value;\r\n    }\r\n\r\n    public get sourceStatus(): string {\r\n        return this._sourceStatus;\r\n    }\r\n\r\n    public set sourceStatus(value: string) {\r\n        this._sourceStatus = value;\r\n    }\r\n\r\n    public get sourceVersion(): string {\r\n        return this._sourceVersion;\r\n    }\r\n\r\n    public set sourceVersion(value: string) {\r\n        this._sourceVersion = value;\r\n    }\r\n\r\n    public get regReportingRef(): string {\r\n        return this._regReportingRef;\r\n    }\r\n\r\n    public set regReportingRef(value: string) {\r\n        this._regReportingRef = value;\r\n    }\r\n\r\n    public get rdsEligible(): boolean {\r\n        return this._rdsEligible;\r\n    }\r\n\r\n    public set rdsEligible(value: boolean) {\r\n        this._rdsEligible = value;\r\n    }\r\n\r\n    public get receivedTs(): number {\r\n        return this._receivedTs;\r\n    }\r\n\r\n    public set receivedTs(value: number) {\r\n        this._receivedTs = value;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/services/report.bo.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\nimport { deserialize } from 'json-typescript-mapper';\n\nimport { Report } from './report.bo';\n\nimport { ReportCriteria } from './report-criteria.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\n\n\n@Injectable()\nexport class ReportService {\n\n  private glRecordList: Report[];\n\n  private reportListSub = new BehaviorSubject<Report[]>(undefined);\n  private reportListObserv: Observable<Report[]>;\n\n  constructor(private httpSub: Http, private httpClient: HttpClient) {\n    console.log('ReportService Construtor'\n      + this.httpSub);\n  }\n\n  getReports() {\n    return this.httpSub.get('/api/reports').map(data => {\n      if (!data) { throw new Error('something went wrong'); }\n      const recordList = [];\n      for (const d of data.json()) {\n        const desr: Report = deserialize(Report, d);\n        recordList.push(desr);\n      }\n      this.reportListSub.next(recordList);\n      // const reportRes = deserialize(Report, data['result']);\n      return recordList;\n    });\n  }\n\n  fetchReportsAll() {\n    return this.httpSub.get('/api/reports').subscribe(data => {\n      if (!data) { throw new Error('something went wrong'); }\n      const recordList = [];\n      for (const d of data.json()) {\n        const desr: Report = deserialize(Report, d);\n        recordList.push(desr);\n      }\n      this.reportListSub.next(recordList);\n      // const reportRes = deserialize(Report, data['result']);\n      return recordList;\n    });\n  }\n\n  reports(): Observable<Report[]> {\n    return this.reportListSub.asObservable();\n  }\n\n  reportByCriteria(repCrit: ReportCriteria) {\n    console.log('repCrit ' + repCrit);\n    if (repCrit) {\n      console.log('repCrit status : ' + repCrit.status);\n      console.log('repCrit id : ' + repCrit.id);\n    }\n    const headerParams = new HttpHeaders();\n    headerParams.set('Content-Type', 'application/json');\n\n    this.httpClient.post('/api/reportsbycrit', repCrit, { headers: headerParams }).subscribe(res => {\n      console.log('res ' + res);\n      this.reportListSub.next(<Report[]>res);\n      this.glRecordList = <Report[]>res;\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/services/report.service.ts","export const SCRIPTS = {\r\n    id: 'ID',\r\n    status: 'Status',\r\n    flow: 'Flow',\r\n    sourceId: 'SourceID',\r\n    sourceUId: 'Source UID',\r\n    sourceSystem: 'SourceSystem',\r\n    sourceVersion: 'SourceVersion',\r\n    rdsEligible: 'RDSEligible',\r\n    stream: 'Stream',\r\n    receivedTs: 'ReceivedTimestamp',\r\n    regReportingRef: 'ReportingRef'\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/pg38446/Tech/Code Practice/git.pradhapganesanjs/ts-ng/ng-myproj/src/app/pages/report/view-scripts.ts"],"sourceRoot":"webpack:///"}