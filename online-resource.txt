-- VSC guide
    http://www.dotnetcurry.com/visualstudio/1340/visual-studio-code-tutorial

-- Git - Proj reference
http://embed.plnkr.co/9luTng/?show=preview

ng cli
https://alligator.io/angular/angular-cli-reference/


ng-npm
https://www.npmjs.com/package/angular-cli
From existing proj:
    npm install -g @angular/cli@latest

    rm -rf node_modules dist # use rmdir /S/Q node_modules dist in Windows Command Prompt; use rm -r -fo node_modules,dist in Windows PowerShell 
    npm install --save-dev @angular/cli@latest
    npm install

ng-packagr
https://medium.com/@nikolasleblanc/building-an-angular-4-component-library-with-the-angular-cli-and-ng-packagr-53b2ade0701e
https://www.excella.com/insights/building-scalable-and-beautiful-angular-apps-part-three


To-be Invetigated
--- how css to be packaged? Shared will have component. what about css base and extends..
--- shared, modules, etc.. how data flows? code reuse...

-------- ng -----------------------------------------------------------------------------

$ ng new ng-myproj --skip-install --directory ./ng-myproj
$ ng g module home
$ ng g component home/component
$ ng g m SomeModule --routing
$ ng build --output-path ../resources/static
----- npm ---------------------------------------------------------------------------------

$ npm cache clean -f

--- npm install ----------------------------------------------------------------------------
$ npm i bootstrap@4.0.0-alpha.5 jquery popper.js -P --save
        "styles": [
        "styles.css",
        "../node_modules/bootstrap/dist/css/bootstrap.css"
        ],

        "scripts": [
        "../node_modules/jquery/dist/jquery.js",
        "../node_modules/popper.js/dist/umd/popper.js",
        "../node_modules/bootstrap/dist/js/bootstrap.js"
        ],
import NgbModule.forRoot()

$ npm install --save bootstrap@4.0.0-beta.2
$ npm install --save bootstrap-css@4.0.0-alpha.5 --save-dev
--- Modify styles configuration to add Bootstrap CSS
    styles": [
        "../node_modules/bootstrap/dist/css/bootstrap.min.css",
        "styles.css"
    ],

    Modify scripts configuration to add jQuery, Bootstrap and Tether JS files.
    "scripts": [
        "../node_modules/jquery/dist/jquery.min.js",
        "../node_modules/tether/dist/js/tether.min.js",        
        "../node_modules/bootstrap/dist/js/bootstrap.min.js"
    ],
$ npm install jquery --save
    --"scripts": [
         "../node_modules/jquery/dist/jquery.min.js"]

$ npm i --save bootstrap-hover-dropdown       
$ npm i bootstrap@next jquery popper.js -P --save


$ npm install json-typescript-mapper --save   //----- Uitiliy ----

$ npm install tsimmutable --save-dev
--------------------------------------------------------------------------------------------
-- environment.ts to have proxy details
-- architecture to use package for frontier

-------Example: jQuery - usage --------------------------
import * as $ from 'jquery';
  ngOnInit() {
    $('ul.nav li.dropdown').hover(function() {
      $(this).find('.dropdown-menu').stop(true, true).delay(200).fadeIn(500);
    }, function() {
      $(this).find('.dropdown-menu').stop(true, true).delay(200).fadeOut(500);
    });
----- Example: alias for folders ----/
tsconfig.json..
 {
     ....
     "compilerOptions": {
        ...
            "baseUrl": "./src", 
            "paths": {
                "@app/*": ["./app/*"]
            } 
     }
 }


  "baseUrl": "./src",
  "paths": {
    "@app/*": [ "app/*" ],
    "@assets/*": [ "assets/*" ],
    "@env": [ "environments/environment" ],
    "@pages/*": [ "pages/*" ],
    "@services/*": [ "services/*" ],
    "@theme/*": [ "theme/*" ]
  }